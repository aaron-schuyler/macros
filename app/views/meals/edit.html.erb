<div class="card mx-auto border-primary w-75">
  <div class="card-header bg-primary text-light">
    <h2>New Meal</h2>
  </div>
  <div class="card-body">
    <% @meal.errors.full_messages.each do |msg| %>
      <div class='alert alert-danger'>
        <%= msg %>
      </div>
    <% end %>
    <%= form_for @meal, url: @post_url do |f| %>
      <%= f.text_field :name, placeholder: 'Name', :class => 'form-control' %>
      <br>
      <h3>Ingredients</h3>
      <%= f.fields_for :ingredients_meals do |im| %>
        <fieldset id='set-<%= im.index %>' class='sets'>
          <div class='row'>
          <div class='col'>
          <%= im.number_field :servings, placeholder: 'Servings', :class => 'form-control' %>
          </div>
          <div class='col choose-ingredient'>
            <%= im.select :ingredient_id, options_from_collection_for_select(@ingredients, :id, :name, @meal.ingredients[im.index].id), {}, :class => 'form-control' %>
          </div>
          </div>
          <fieldset class='new-ingredient d-none form-group'>
            <%= im.fields_for :ingredient do  |i| %>
              <div class="row">
                <p><b>New Ingredient</b></p>
              </div>
              <div class="row">
                <div class="col"><%= i.text_field :name, placeholder: 'Name', :class => 'form-control' %></div>
                <div class="col"><%= i.number_field :calories, placeholder: 'Calories', :class => 'form-control' %></div>
                <div class="col"><%= i.number_field :protein, placeholder: 'Protein', :class => 'form-control' %></div>
                </div>
                <div class="row">
                <div class="col"><%= i.number_field :carbs, placeholder: 'Carbs', :class => 'form-control' %></div>
                <div class="col"><%= i.number_field :fat, placeholder: 'Fat', :class => 'form-control' %></div>
                <div class="col"><%= i.number_field :fiber, placeholder: 'Fiber', :class => 'form-control' %></div>
                <div class="col"><%= i.number_field :sugar, placeholder: 'Sugar', :class => 'form-control' %></div>
              </div>
            <% end %>
          </fieldset>
          <div class="form-group" >
            <%= link_to("Delete", "/meals/#{@meal.id}/ingredients/#{@meal.ingredients[im.index].id}", method: 'delete', :class => "btn btn-danger btn-sm") %>
          </div>
          <script type="text/javascript">
            var lastSet = "#set-<%= im.index %>"
          </script>
        </fieldset>
      <% end %>
      <div class="form-group">
        <br>
        <button type='button' class='btn btn-primary btn-sm' onclick='addIngredient(true)'>Create New Ingredient</button>
        <button type='button' class='btn btn-primary btn-sm' onclick='addIngredient()'>Add New Ingredient</button>
      </div>
      <%= f.submit :class => 'btn btn-success' %>
    <% end %>
  </div>
</div>
<script type="text/javascript">
  var firstSet = document.querySelector('#set-0')
  var flag = false
  var lastSet = lastSet || "#set-0"
  function addIngredient(newIngredient) {
    var set = firstSet
    var id1 = parseInt(lastSet.split("-")[1])
    var set1Select = set.querySelector('select')
    if (id1 === 0 && flag && newIngredient && set1Select.value == "") {
      console.log(set1Select.value)
      document.querySelector('.new-ingredient').classList.remove('d-none')
      document.querySelector('.choose-ingredient').classList.add('d-none')
      document.querySelector('#removeButton').classList.remove('d-none')
      flag = false
    } else {
      var set2 = set.cloneNode(true)
      var id2 = id1 + 1
      set2.id = "set-" + id2
      if (newIngredient) {
        set2.querySelector('.new-ingredient').classList.remove('d-none')
        set2.querySelector('.choose-ingredient').remove()
        updateIndex(set2, 'input', 0, id2)
      } else {
        chooseIngredient = set2.querySelector('.choose-ingredient')
        chooseIngredient.classList.remove('d-none')
        updateIndex(chooseIngredient, 'select', 0, id2)
        updateIndex(set2, 'input', 0, id2)
        set2.querySelector('.new-ingredient').remove()
      }
      document.getElementById('set-' + id1).after(set2)
      lastSet = '#' + set2.id
    }
  }
  function updateIndex(parent, children, oldIndex, newIndex) {
    parent.querySelectorAll(children).forEach((el) => {
      el.name = el.name.replace(oldIndex.toString(), newIndex.toString())
      el.id = el.id.replace(oldIndex.toString(), newIndex.toString())
      if (oldIndex === 0) el.value = ""
    })
  }
</script>
